Currently there is no check for a division by 0 in LineArea (area_module.js)
> Should a line be long 0?

Change all instances of a for loop with a for-in loop.

Use objects to define the corrisponing points in area_module.js.

in area_module.js "line" still doesn't have the getCorrispondingPoint setup.

events can be stacked, as an example hovering over a selectArea could add a sprite to the canvas AND a popup description.

every element2d.

Workflow:
"Workplace" is a canvas with an active camera and a collection of entities,
"Canvas" is a collection of elements2d and selectableAreas, 
When the mouse hovers the canvas every selectableArea checks if the mouse is within it's area, if that's the case then is will trigger the "onHover" event.
A camera can be requested to render a collection of entities on a canvas:
When this happens the camera will iterate through all entities and ask to itself to the canvas, to do so it requires the coordinates of it's body so it passes the obj of the body to the camera which will handle the conversion through the corrisponding method (defined in the objs).
//or whatever, should probably draw this instead of explaining it with words...

Camera.js need a lot of performance upgrades.
